# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu mtop]
canbus_uuid: 1a3c230191ed

[neopixel led]
pin: mtop:PD3
chain_count: 21
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[fan_generic cpap]
pin: mtop:PB9
shutdown_speed:0
cycle_time:0.01

[servo fan]
pin: mtop:PB8
maximum_servo_angle: 180
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025

[gcode_macro CPAP_STOP]
gcode:
  SET_FAN_SPEED FAN=cpap SPEED=0.0
  SET_GCODE_VARIABLE MACRO=M106 VARIABLE=cpap_power VALUE=0.0

[gcode_macro M106]
variable_cpap_power: 0.0
gcode:
  {% set min_cpap = 0.2 %}
  {% set max_cpap = 0.7 %}
  {% set current_cpap = printer['gcode_macro M106'].cpap_power|float %}
  {% set speed = params.S|float / 255.0 %}
  {% set zero_angle = 110 %}
  {% set min_angle = 110 %}
  {% set max_angle = 34 %}
  {% if speed < 0.01 %}
    # Almost zero - close the valve fully
    SET_SERVO SERVO=fan ANGLE={ zero_angle }
  {% elif speed <= current_cpap %} 
    # CPAP fan is already at sufficient power - modulate the valve
    {% set valve_position = speed / current_cpap %}
    SET_SERVO SERVO=fan ANGLE={ min_angle + (max_angle-min_angle) * valve_position }    
  {% else %}
    # Need more power - ramp up the CPAP
    {% set valve_position = 1.0 %}
    SET_GCODE_VARIABLE MACRO=M106 VARIABLE=cpap_power VALUE={ speed }    
    SET_FAN_SPEED FAN=cpap SPEED={ min_cpap + speed * (max_cpap - min_cpap) }
    SET_SERVO SERVO=fan ANGLE={ min_angle + (max_angle-min_angle) * valve_position } 
  {% endif %}

[gcode_macro M107]
gcode:
  M106 S0

